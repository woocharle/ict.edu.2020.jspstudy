
1. Intro

   (1) mybatis 란?

       마이바티스는 개발자가 지정한 SQL, 저장프로시저 그리고 몇가지 고급 매핑을 지원하는 퍼시스턴스 
       프레임워크이다. 마이바티스는 JDBC로 처리하는 상당부분의 코드와 파라미터 설정및 결과 매핑을 
       대신해준다.
       마이바티스는 데이터베이스 레코드에 원시타입과 Map 인터페이스 그리고 자바 POJO 를 설정해서 
       매핑하기 위해 XML과 애노테이션을 사용할 수 있다.

   (2) 실행 준비

	1) 다운을 받는다. 경로(https://blog.mybatis.org/p/products.html)
     	    
           MyBatis 3의 SQL Mapping Framework for Java를 다운 받는다.

	2) 압축해제 

	3) jar파일을 WEB-INF의 lib폴더에 넣어준다.

        4) 자바영역에서 3개의 클래스 파일, 2개의 xml파일로 구성한다.

	   - VO, DAO, DBService, config.xml, mapper.xml

	   - VO(ValueObject): 객체 정보(DB컬럼, 파라미터값)를 담는 객체

 	   - DAO(Data Access Object): DataBase의 data에 접근하기 위한 객체

	   - DBService: config.xml 파일을 읽어서 MyBatis를 사용 할 수 있도록 
		 	환경 설정 해줌. 

	   - config.xml: 오라클에 접근할 수 있도록 하는 환경설정과 실제 DB처리해서 결과를 
			 얻어내는 mapper.xml을 지정해주는 환경설정.

	   - mapper.xml: 실제 DB처리 하는 SQL 구문으로 결과를 얻어내는 곳.

   (3) 사용하는 이유: VO에 setter등을 이용하는 것을 생략하게 해준다. 단 컬럼명과 VO가 같아야한다. 

2. mapper.xml
   
   (1) 표현 방식

   	<select id="" parameterType="" resultType="">
       		실제 사용하는 쿼리 작성 ( ? 대신 #{}사용 )
   	</select>

   	<insert id="" parameterType="">
   		실제 사용하는 쿼리 작성 ( ? 대신 #{}사용 )
   	</insert>

   	<update id="" parameterType="">
   		실제 사용하는 쿼리 작성 ( ? 대신 #{}사용 )
   	</update>

   	<delete id="" parameterType="">
   		실제 사용하는 쿼리 작성 ( ? 대신 #{}사용 )
   	</delete>



   (2) 구문 설명  

	1) id속성       : 호출하는 이름을 말함.

	2) parameterType: #{}에 삽입되는 정보의 자료형

	3) resultType   : 실행 결과의 자료형

	   - select의 결과가 하나   =>   VO(mapper)   =>   받는 곳에는 VO

	   - select의 결과가 여러개 =>   VO()   =>   받는 곳에는 list<VO> 


3. elipse에 java 연동 준비 [pjt: 0721_MVC_Mybatis_01참고]

   (1) DBService 생성

	1) MyBatis를 사용하기 위해서 SqlSession클래스가 필요하고 SqlSessionFactory 클래스 가지고
 	   SqlSession을 만든다.

	
   (2) mapper.xml과 config.xml 생성: Mybatis에 딸린 pdf파일 참고
	
	1) config.xml pdf파일 7p참고

 	2) mapper.xml pdf파일 8p참고

   (3) DAO

	1) SqlSession 클래스를 사용.

	2) 
	  
	   자동 commit 안 됨.
	   ss = DBService.getFactory().openSession();
	   ss = DBService.getFactory().openSession(false);
			
	   자동 commit 됨.
	   ss = DBService.getFactory().openSession(true);
	

	3) mapper.xml의 id가 list인 태그를 찾아 결과를 받는다.

	




